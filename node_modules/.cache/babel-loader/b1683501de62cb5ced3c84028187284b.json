{"ast":null,"code":"import { INCREASE, DECREASE, CLEAR_CART, REMOVE, GET_TOTALS } from './action.js';\nimport cartItems from './cart-items';\nconst initialStore = {\n  cart: cartItems,\n  amount: 0,\n  total: 0\n};\n\nconst reducer = (state = initialStore, action) => {\n  // Increase\n  if (action.type === INCREASE) {\n    let tempCart = state.cart.map(cartItem => {\n      if (cartItem.id === action.payload.id) {\n        cartItem = { ...cartItem,\n          amount: cartItem.amount + 1\n        };\n      }\n\n      return cartItem;\n    });\n    return { ...state,\n      cart: tempCart\n    };\n  } // Decrease reducer\n\n\n  if (action.type === DECREASE) {\n    let tempCart = [];\n    console.log(state.amount);\n\n    if (action.payload.amount === 1) {\n      tempCart = state.cart.filter(cartItem => cartItem.id !== action.payload.id);\n      console.log('hey its one');\n    } else {\n      tempCart = state.cart.map(cartItem => {\n        if (cartItem.id === action.payload.id) {\n          cartItem = { ...cartItem,\n            amount: cartItem.amount - 1\n          };\n        }\n\n        return cartItem;\n      });\n    }\n\n    return { ...state,\n      cart: tempCart\n    };\n  } // clear cart reducer\n\n\n  if (action.type === CLEAR_CART) {\n    return { ...state,\n      cart: []\n    };\n  }\n\n  if (action.type === REMOVE) {\n    return { ...state,\n      cart: state.cart.filter(cartItems => cartItems.id !== action.payload.id)\n    };\n  } // gettotals reducer\n\n\n  if (action.type === GET_TOTALS) {\n    let {\n      total,\n      amount\n    } = state.cart.reduce((cartTotal, cartItem) => {\n      const {\n        price,\n        amount\n      } = cartItem;\n      const itemTotal = price * amount;\n      cartTotal.amount += amount;\n      cartTotal.total += itemTotal;\n      return cartTotal;\n    }, {\n      total: 0,\n      amount: 0\n    });\n    total = parseFloat(total.toFixed(2));\n    return { ...state,\n      total,\n      amount\n    };\n  }\n\n  ;\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/keshavg2/dust/Shopping_cart/src/reducer.js"],"names":["INCREASE","DECREASE","CLEAR_CART","REMOVE","GET_TOTALS","cartItems","initialStore","cart","amount","total","reducer","state","action","type","tempCart","map","cartItem","id","payload","console","log","filter","reduce","cartTotal","price","itemTotal","parseFloat","toFixed"],"mappings":"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","sourcesContent":["import {INCREASE, DECREASE, CLEAR_CART, REMOVE, GET_TOTALS,} from './action.js';\nimport cartItems from './cart-items';\n\nconst initialStore={\n    cart:cartItems,\n    amount:0,\n    total:0,\n  }\n\nconst reducer =(state = initialStore, action)=>{\n    // Increase\n    if(action.type===INCREASE){\n        let tempCart = state.cart.map((cartItem)=>{\n            if(cartItem.id===action.payload.id){\n                cartItem= {...cartItem, amount:cartItem.amount+1};\n            }\n            return cartItem;\n        }) \n        return {...state, cart:tempCart};\n    }\n\n    // Decrease reducer\n    if(action.type===DECREASE){\n        let tempCart = [];\n        console.log(state.amount);\n        if(action.payload.amount===1){\n         tempCart = state.cart.filter(\n             cartItem=>cartItem.id!==action.payload.id\n         );\n         console.log('hey its one');\n        }\n        else{\n         tempCart = state.cart.map((cartItem)=>{\n           if(cartItem.id===action.payload.id){\n               cartItem={...cartItem,amount:cartItem.amount-1};\n           }\n           return cartItem;\n        });\n    }\n        return{...state, cart:tempCart};\n    }\n    \n    // clear cart reducer\n    if(action.type===CLEAR_CART){\n        return{ ...state, cart:[]};\n    }\n    if(action.type===REMOVE){\n        return{...state, cart:state.cart.filter(cartItems=>cartItems.id!==action.payload.id)}\n    }\n       \n    // gettotals reducer\n    if(action.type===GET_TOTALS){\n        let{total, amount}=state.cart.reduce((cartTotal, cartItem)=>{\n          const{price,amount}=cartItem;\n          const itemTotal=price*amount;\n\n          cartTotal.amount+=amount;\n          cartTotal.total+=itemTotal;\n\n          return cartTotal;\n         },{\n            total:0,\n            amount:0,\n        })\n        total=parseFloat(total.toFixed(2));\n        return {...state, total, amount};\n    };\n    return state;\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}